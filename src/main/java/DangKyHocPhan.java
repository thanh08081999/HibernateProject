
import dao.HocPhanDAO;
import dao.PhongHocDAO;
import dao.SVDKHPDAO;
import java.sql.Date;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import pojo.GiaoVien;
import pojo.HocPhan;
import pojo.IDHocPhan;
import pojo.MonHoc;
import pojo.SVDKHP;
import pojo.TaiKhoan;
import java.time.LocalDate;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import pojo.IDSVDKHP;
import pojo.PhongHoc;


public class DangKyHocPhan extends javax.swing.JFrame {
    TaiKhoan taiKhoan;
    DefaultTableModel defaultTableModel;
    /**
     * Creates new form DangKyHocPhan
     * @param taiKhoan
     */
    public DangKyHocPhan(TaiKhoan taiKhoan) {
        this.taiKhoan = taiKhoan;
        initComponents();
        
        defaultTableModel = (DefaultTableModel)tbDKHP.getModel();
        
        themDuLieu();
    }
    
    public void themDuLieu() {
        List<HocPhan> dshp = HocPhanDAO.layDanhSachHocPhan();
        List<SVDKHP> dshpsvdk = SVDKHPDAO.layDanhSachSVDKHP();
        dshp.forEach(hp -> {
            
            MonHoc mh1 = hp.getMaMonHoc();
            boolean k = true;
            for (SVDKHP dshpsvdk1 : dshpsvdk) {
                IDSVDKHP idsvdkhp = dshpsvdk1.getIdSVDKHP();
                if (idsvdkhp.getMaMonHoc().equals(mh1.getMaMonHoc()) && idsvdkhp.getMaSinhVien().equals(taiKhoan.getTaiKhoan())) {
                    k = false;
                    break;
                }
            }
            if (k){
                IDHocPhan idhp = hp.getIdHocPhan();
                defaultTableModel.addRow(new Object[]{mh1.getMaMonHoc(), mh1.getTenMonHoc(),
                    mh1.getSoTinChi(),idhp.getPhongHoc(), idhp.getIdThu(), idhp.getIdCa(), hp.getSoSlot()});
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnQuayLai = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbDKHP = new javax.swing.JTable();
        btnDangKy = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnQuayLai.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnQuayLai.setText("Quay lại");
        btnQuayLai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuayLaiActionPerformed(evt);
            }
        });

        tbDKHP.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tbDKHP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã môn học", "Tên môn học", "Số tín chỉ", "Phòng học", "Thứ", "Ca học", "Số slot", "Chọn"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbDKHP.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tbDKHP.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(tbDKHP);
        if (tbDKHP.getColumnModel().getColumnCount() > 0) {
            tbDKHP.getColumnModel().getColumn(0).setPreferredWidth(90);
            tbDKHP.getColumnModel().getColumn(1).setPreferredWidth(280);
            tbDKHP.getColumnModel().getColumn(2).setPreferredWidth(90);
            tbDKHP.getColumnModel().getColumn(3).setPreferredWidth(80);
            tbDKHP.getColumnModel().getColumn(4).setPreferredWidth(70);
            tbDKHP.getColumnModel().getColumn(5).setPreferredWidth(120);
            tbDKHP.getColumnModel().getColumn(6).setPreferredWidth(70);
            tbDKHP.getColumnModel().getColumn(7).setPreferredWidth(30);
        }

        btnDangKy.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnDangKy.setText("Đăng ký");
        btnDangKy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDangKyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 928, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnQuayLai)
                            .addComponent(btnDangKy))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnQuayLai)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addComponent(btnDangKy)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnQuayLaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuayLaiActionPerformed
        new ChucNangSinhVien(taiKhoan).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnQuayLaiActionPerformed

    private void btnDangKyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDangKyActionPerformed
        List<HocPhan> dshp = new ArrayList<>();
        for (int i = 0; i < tbDKHP.getRowCount(); i++) {
            if (String.valueOf(tbDKHP.getValueAt(i, 7)).equals("true")) {
                IDHocPhan idhp = new IDHocPhan(String.valueOf(tbDKHP.getValueAt(i, 3)), 
                        String.valueOf(tbDKHP.getValueAt(i, 4)), String.valueOf(tbDKHP.getValueAt(i, 5)));
                HocPhan hp = HocPhanDAO.layThongTinHocPhan(idhp);
                
                dshp.add(hp);
            }
        }
        int size = dshp.size();
        boolean k = true;
        if (size <= 8) {
            for (int i = 0; i < size - 1; i++) {
                for (int j = i + 1; j < size; j++) {
                    IDHocPhan idhp1 = dshp.get(i).getIdHocPhan();
                    IDHocPhan idhp2 = dshp.get(j).getIdHocPhan();
                    if (idhp1.getIdThu().equals(idhp2.getIdThu()))
                        if (idhp1.getIdCa().equals(idhp2.getIdCa())) 
                            k = false;
                }
            }
            if (k) {
                for (int i = 0; i < size; i++) {
                    MonHoc mh = dshp.get(i).getMaMonHoc();
                    GiaoVien gv = dshp.get(i).getGiaoVien();
                    IDHocPhan idhp = dshp.get(i).getIdHocPhan();
                    PhongHoc ph = PhongHocDAO.layThongTinPhongHoc(idhp.getPhongHoc());
                    IDSVDKHP id = new IDSVDKHP(taiKhoan.getTaiKhoan(), mh.getMaMonHoc());
                    Date ngayDKHP = Date.valueOf(LocalDate.now());
                    SVDKHP svdkhp = new SVDKHP(id, gv, ph, idhp.getIdThu(), idhp.getIdCa(), null, ngayDKHP);
                    SVDKHPDAO.themSVDKHP(svdkhp);
                }
                JOptionPane.showMessageDialog(this, "Đăng ký học phần thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                
            } else {
                JOptionPane.showMessageDialog(this, "Có học phần đăng ký trùng thời gian", "Thông báo", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Số học phần đăng ký tối đa là 8", "Thông báo", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDangKyActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDangKy;
    private javax.swing.JButton btnQuayLai;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbDKHP;
    // End of variables declaration//GEN-END:variables
}
